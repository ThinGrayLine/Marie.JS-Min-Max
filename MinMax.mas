// Start Loop, receives user input
startLoop, load X
    Input
    Store X
    
// sees if a new min is found
findMin, load MIN 
	Skipcond 800
    Jump negMin
    
    Jump posMin
    
    /Subt X
    /Skipcond 000
    /Jump findMax

    /Jump storeMin


negMin, load X
	Skipcond 000
    Add X
    
    Load X
    Skipcond 800
    Subt MIN
    
    Skipcond 800
    Jump storeMin
    
    Jump findMax  

posMin, load X
	Skipcond 800
    Add X
    
    Skipcond 800
    Jump storeMin
    
    Load MIN
    Subt X
  
    Skipcond 800
    Jump storeMin
    
    Jump findMax

// stores new min
storeMin, load X
	Store MIN
    Jump findMax

// sees if new max is found
findMax, load MAX
	Load MAX
	Subt X
    Skipcond 800
    Jump storeMax
    
    Jump counter

// stores max
storeMax, load X
	Store MAX
    Jump counter

// iterates over ten inputs
counter, load count
	Subt one
    Store count
    Skipcond 400
    Jump startLoop
    
    // displays final results, terminates program
    Load MAX
    Output
    Load MIN
    Output
    
    Halt 
    
    // 1 2 5 -3 -5 -7 8 9 10 0

// variable declaration
MAX, DEC 0
MIN, DEC 0
X, DEC 0
one, DEC 1
count, DEC 10
