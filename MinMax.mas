// Start Loop, receives user input
startLoop, load X
    Input
    Store X
    
    // checks if count is at 10, if not, loop through normally
    // if at 10, call initialize
    Load count
    Subt ten
    Skipcond 400
    Jump findMin
    Jump initialize
    
// stores initial MIN (so 0 - X doesn't occur and break the program)    
initialize, load X
	Store MIN
    Jump findMin
    
// sees if a new min is found
findMin, load MIN 
	Subt X
	Skipcond 800
    Jump findMax
    
    Jump storeMin

// stores new min
storeMin, load X
	Store MIN
    Jump findMax

// sees if new max is found
findMax, load MAX
	Subt X
    Skipcond 000
    Jump counter
    
    Jump storeMax

// stores max
storeMax, load X
	Store MAX
    Jump counter

// iterates over ten inputs
counter, load count
	Subt one
    Store count
    Skipcond 400
    Jump startLoop // if count = 0, stops looping
    
    // displays final results, terminates program
    Load MAX
    Output
    Load MIN
    Output
    
    Halt // ends program
    
    // 1 2 5 -3 -5 -7 8 9 10 0

// variable declaration
X, DEC 0
MAX, DEC 0
MIN, DEC 0
one, DEC 1
count, DEC 10
ten, DEC 10
